#!/bin/bash

set -x
server=$(docker run -d -p 8443:443 rancher/rancher:latest)
server_ip=$(docker inspect ${server} -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}')
export RANCHER_URL=https://${server_ip}

cat<<EOF>>/tmp/rke_cluster.yml
ingress:
  node_selector:
    app: ingress
network:
  plugin: calico
nodes:
  - address: node-0
    role: [etcd,controlplane,worker]
    user: ubuntu
EOF
docker ps
rke up --config /tmp/rke_cluster.yml --dind
export KUBECONFIG="/tmp/kube_config_rke_cluster.yml"

password=$(docker exec -it ${server} reset-password | grep -v '^New'|tr -d '\r')

USERTOKEN=$(curl -X POST -k "${RANCHER_URL}/v3-public/localProviders/local?action=login" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    --data-binary "{\"password\":\"${password}\",\"username\":\"admin\"}"|jq -r .token)

curl -X PUT -k "${RANCHER_URL}/v3/settings/server-url" \
    -H 'Accept: application/json' \
    -H "Authorization: Bearer ${USERTOKEN}" \
    -H 'Content-Type: application/json' \
    --data-binary "{\"name\": \"server-url\", \"value\":\"${RANCHER_URL}\"}"

read -r cluster_json << EOM
{
  "type": "cluster",
  "dockerRootDir": "/var/lib/docker",
  "enableNetworkPolicy": "false",
  "name": "bootstrap-imported-rke-cluster"
}
EOM
echo READ EXIT: $?

cluster_obj=$(curl -sk -X POST -H "Authorization: Bearer ${USERTOKEN}" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    ${RANCHER_URL}/v3/clusters \
    -d "${cluster_json}")

cluster_id=$(echo $cluster_obj|jq -r '.id')
registration_link=$(echo $cluster_obj|jq -r '.links.clusterRegistrationTokens')

curl -sk -X POST -H "Authorization: Bearer ${USERTOKEN}" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    ${RANCHER_URL}/v3/clusterregistrationtoken \
    -d "{\"clusterId\": \"${cluster_id}\", \"type\":\"clusterRegistrationToken\"}"
sleep 1

manifest_url=$(curl -sk -X GET -H "Authorization: Bearer ${USERTOKEN}" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    ${registration_link}| jq -r '.data[0].manifestUrl')

# Register
curl -sfLk ${manifest_url} | kubectl apply -f -

api_keys=$(curl -sSk \
  "${RANCHER_URL}/v3/token" \
  -H 'content-type: application/json' \
  -H "Authorization: Bearer ${USERTOKEN}" \
  --data-binary '{"type":"token","description":"automation","name":""}')

export RANCHER_ACCESS_KEY=$(echo ${api_keys} | jq -r '.token' | cut -d":" -f1)
export RANCHER_SECRET_KEY=$(echo ${api_keys} | jq -r '.token' | cut -d":" -f2)
export RANCHER_TOKEN_KEY=$(echo ${api_keys} | jq -r '.token')
